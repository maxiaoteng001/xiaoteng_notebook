"use strict";(self.webpackChunkxiaoteng=self.webpackChunkxiaoteng||[]).push([[8259],{7369:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-6d613c5c",path:"/python/python_basics/modules/httpx.html",title:"httpx",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"python/python_basics/modules/httpx.md",git:{updatedTime:1631876121e3,contributors:[{name:"maxiaoteng",email:"jizhuwo00@hotmail.com",commits:1}]}}},364:(n,s,a)=>{a.r(s),a.d(s,{default:()=>p});const t=(0,a(6252).uE)('<h1 id="httpx" tabindex="-1"><a class="header-anchor" href="#httpx" aria-hidden="true">#</a> httpx</h1><ol><li><p>demo</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> httpx\n<span class="token keyword">import</span> brotli\nheaders <span class="token operator">=</span> <span class="token punctuation">{</span>\n    <span class="token comment"># httpx自动添加字段</span>\n    <span class="token comment"># &quot;:method&quot;: &quot;GET&quot;,</span>\n    <span class="token comment"># &quot;:authority&quot;: &quot;teslamotorsclub.com&quot;,</span>\n    <span class="token comment"># &quot;:scheme&quot;: &quot;https&quot;,</span>\n    <span class="token comment"># &quot;:path&quot;: &quot;/tmc/online/?type=member&quot;,</span>\n    <span class="token string">&quot;user-agent&quot;</span><span class="token punctuation">:</span> <span class="token string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.93 Safari/537.36&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span>\n<span class="token keyword">with</span> httpx<span class="token punctuation">.</span>Client<span class="token punctuation">(</span>headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> http2<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> verify<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>\n    r <span class="token operator">=</span> client<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">)</span>\n    <span class="token keyword">if</span> r<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>\n        <span class="token keyword">if</span> r<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Content-Encoding&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;br&#39;</span><span class="token punctuation">:</span>\n            res_text <span class="token operator">=</span> brotli<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">)</span>\n        <span class="token keyword">else</span><span class="token punctuation">:</span>\n            res_text <span class="token operator">=</span> r<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div></li><li><p>说明</p><ol><li>httpx自动添加headers中http20所需要的字段</li><li>tesla的response使用brotli压缩, 需要特殊处理</li></ol></li></ol>',2),p={render:function(n,s){return t}}}}]);