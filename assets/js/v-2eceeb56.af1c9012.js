"use strict";(self.webpackChunkxiaoteng=self.webpackChunkxiaoteng||[]).push([[4017],{1128:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-2eceeb56",path:"/python/python_web/http/post.html",title:"POST",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"python/python_web/http/post.md",git:{updatedTime:1631876121e3,contributors:[{name:"maxiaoteng",email:"jizhuwo00@hotmail.com",commits:1}]}}},3136:(e,n,s)=>{s.r(n),s.d(n,{default:()=>l});const a=(0,s(6252).uE)('<h1 id="post" tabindex="-1"><a class="header-anchor" href="#post" aria-hidden="true">#</a> POST</h1><p>HTTP协议中的post请求，由状态行、请求头(headers)和消息主体(entity-body)组成<br> post的消息主体（entity-body）的说明 消息主体(entity-body)是在HTTP协议中规定，以ASCII码传输，但协议没有规定使用何种编码，所以POST请求包含了Content-Type(编码说明)和entity-body(消息主体)两部分</p><p>Content-Type样式：</p><ul><li><p>x-www-form-urlencoded</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># headers样式\n# 消息主体发送浏览器form表单，消息主体进行url编码\nheaders = {\n    &#39;Content-Type&#39;:&#39;application/x-www-form-urlencoded&#39;\n}\n# url编码后的样式\ntitle=test&amp;sub%5B%5D=1&amp;sub%5B%5D=2&amp;sub%5B%5D=3\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><ul><li>requests样式<div class="language-Python ext-Python line-numbers-mode"><pre class="language-Python"><code>import requests\npayload = {}  # 一个字典，requests在发送时会自动编码\nres = requests.post(url=url, data=payload)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li><li>requests发送list<div class="language-Python ext-Python line-numbers-mode"><pre class="language-Python"><code>payload = ((&#39;key1&#39;, &#39;value1&#39;), (&#39;key1&#39;, &#39;value2&#39;))\nr = requests.post(&#39;http://httpbin.org/post&#39;, data=payload)\n&gt;&quot;form&quot;: {\n&gt;    &quot;key1&quot;: [\n&gt;      &quot;value1&quot;,\n&gt;      &quot;value2&quot;\n&gt;    ]\n&gt;  },\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ul></li><li><p>application/json</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code># headers样式\n# 消息主题是序列化后的JSON字符串\nheaders = {\n    &#39;Content-Type&#39;:&#39;application/json&#39;\n}\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><ul><li>requests样式<div class="language-Python ext-Python line-numbers-mode"><pre class="language-Python"><code>import requests\npayload = {}  # 一个字典，requests在发送时会自动编码\nr = requests.post(url, data=json.dumps(payload))        \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div></li></ul></li><li><p>multipart/form-data</p></li><li><p>text/xml</p></li></ul>',4),l={render:function(e,n){return a}}}}]);