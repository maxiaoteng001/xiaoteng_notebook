"use strict";(self.webpackChunkxiaoteng=self.webpackChunkxiaoteng||[]).push([[9649],{9653:(e,a,i)=>{i.r(a),i.d(a,{data:()=>l});const l={key:"v-496cad08",path:"/python/python_web/websafe.html",title:"WEB应用安全",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"SQL注入",slug:"sql注入",children:[]},{level:2,title:"跨站伪装请求CSRF",slug:"跨站伪装请求csrf",children:[]},{level:2,title:"跨站脚本攻击XSS",slug:"跨站脚本攻击xss",children:[]}],filePathRelative:"python/python_web/websafe.md",git:{updatedTime:1631876121e3,contributors:[{name:"maxiaoteng",email:"jizhuwo00@hotmail.com",commits:1}]}}},4868:(e,a,i)=>{i.r(a),i.d(a,{default:()=>t});const l=(0,i(6252).uE)('<h1 id="web应用安全" tabindex="-1"><a class="header-anchor" href="#web应用安全" aria-hidden="true">#</a> WEB应用安全</h1><h2 id="sql注入" tabindex="-1"><a class="header-anchor" href="#sql注入" aria-hidden="true">#</a> SQL注入</h2><p>绝不信任用户提交的数据, 拿到用户的输入后, 应该对值进行转义, 通过参数传递</p><h2 id="跨站伪装请求csrf" tabindex="-1"><a class="header-anchor" href="#跨站伪装请求csrf" aria-hidden="true">#</a> 跨站伪装请求CSRF</h2><ul><li><p>在访问到当前页面时, 服务器发送一个token, 在删除请求时验证token是否存在. 记得及时删除</p></li><li><p>使用正确的请求方法, 不该用get的地方不用</p></li><li><p>检查请求头的Referer字段</p></li></ul><h2 id="跨站脚本攻击xss" tabindex="-1"><a class="header-anchor" href="#跨站脚本攻击xss" aria-hidden="true">#</a> 跨站脚本攻击XSS</h2><ul><li><p>攻击者在网页中嵌入JavaScript脚本, 当用户浏览此网页, 脚本就会在用户的浏览器上执行, 从而达到攻击者的目的,<br> 比如: 盗取cookie, 会话信息等内容.</p></li><li><p>jinja2过滤了js代码等内容, 自动转义成文本.</p></li><li><p>flask关闭js访问cookie的权限</p></li></ul>',7),t={render:function(e,a){return l}}}}]);