"use strict";(self.webpackChunkxiaoteng=self.webpackChunkxiaoteng||[]).push([[6801],{6981:(e,n,s)=>{s.r(n),s.d(n,{data:()=>a});const a={key:"v-d3b23850",path:"/python/python_basics/built_in_module/urllib.html",title:"urllib",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"python/python_basics/built_in_module/urllib.md",git:{updatedTime:1631876121e3,contributors:[{name:"maxiaoteng",email:"jizhuwo00@hotmail.com",commits:1}]}}},339:(e,n,s)=>{s.r(n),s.d(n,{default:()=>u});var a=s(6252);const r=(0,a._)("h1",{id:"urllib",tabindex:"-1"},[(0,a._)("a",{class:"header-anchor",href:"#urllib","aria-hidden":"true"},"#"),(0,a.Uk)(" urllib")],-1),l={href:"https://stackoverflow.com/questions/41501638/attributeerror-module-urllib-has-no-attribute-parse",target:"_blank",rel:"noopener noreferrer"},i=(0,a.Uk)("AttributeError: module 'urllib' has no attribute 'parse'"),t=(0,a.uE)('<ol><li><p>构造请求</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>import urllib.parse\n# &amp;后面的组合生成\nurllib.parse.urlencode(query_data, doseq=True)  # query_data是一个dict\n# 如果一个key中是list，doseq可以确保正确的编码\n\n# 如果需要构造cookie或其他内容，需要对单独的str编码\nurllib.parse.quote(str)\n# 默认将空格转码成%20， 如果需要转成`+`,使用下面的  \nurllib.parse.quote_plus(str)\n[+和%20的区别](https://stackoverflow.com/questions/2678551/when-to-encode-space-to-plus-or-20/2678602)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div></li><li><p>解析请求</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>urllib.parse.parse_qs(&#39;age=23&amp;name=%E5%BC%A0%E4%B8%89&#39;)\n{&#39;age&#39;: [&#39;23&#39;], &#39;name&#39;: [&#39;张三&#39;]}\n\nurllib.parse.parse_qsl(&#39;age=23&amp;name=%E5%BC%A0%E4%B8%89&#39;)\n[(&#39;age&#39;, &#39;23&#39;), (&#39;name&#39;, &#39;张三&#39;)]\n\n# 解析字符串\nurllib.parse.unquote(query)\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div></li></ol>',1),u={render:function(e,n){const s=(0,a.up)("OutboundLink");return(0,a.wg)(),(0,a.iD)(a.HY,null,[r,(0,a._)("p",null,[(0,a._)("a",l,[i,(0,a.Wm)(s)])]),t],64)}}}}]);