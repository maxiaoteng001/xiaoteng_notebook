"use strict";(self.webpackChunkxiaoteng=self.webpackChunkxiaoteng||[]).push([[8482],{9440:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-c8ee7244",path:"/python/python_basics/modules/brotli.html",title:"Brotli",lang:"en-US",frontmatter:{},excerpt:"",headers:[],filePathRelative:"python/python_basics/modules/brotli.md",git:{updatedTime:1631876121e3,contributors:[{name:"maxiaoteng",email:"jizhuwo00@hotmail.com",commits:1}]}}},8474:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h1 id="brotli" tabindex="-1"><a class="header-anchor" href="#brotli" aria-hidden="true">#</a> Brotli</h1><ol><li><p>demo</p><div class="language-python ext-py line-numbers-mode"><pre class="language-python"><code><span class="token keyword">import</span> brotli\n<span class="token keyword">if</span> r<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;Content-Encoding&#39;</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token string">&#39;br&#39;</span><span class="token punctuation">:</span>\n    res_text <span class="token operator">=</span> brotli<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">)</span>\n<span class="token keyword">else</span><span class="token punctuation">:</span>\n    res_text <span class="token operator">=</span> r<span class="token punctuation">.</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div></li></ol>',2),e={render:function(n,s){return t}}}}]);